<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[(转载)备战NOIP-vim简明教程]]></title>
      <url>https://blog.ltmcpe.cn/2016/11/05/%E8%BD%AC%E8%BD%BD-%E5%A4%87%E6%88%98NOIP-vim%E7%AE%80%E6%98%8E%E6%95%99%E7%A8%8B/</url>
      <content type="html"><![CDATA[<p><strong><em>首先%MuZhou(dalao)</em></strong><br><strong><em>首先%MuZhou(dalao)</em></strong><br><strong><em>首先%MuZhou(dalao)</em></strong><br><strong><em>首先%MuZhou(dalao)</em></strong><br><strong><em>首先%MuZhou(dalao)</em></strong><br><strong><em>首先%MuZhou(dalao)</em></strong><br><strong><em>首先%MuZhou(dalao)</em></strong><br><strong><em>首先%MuZhou(dalao)</em></strong><br><strong><em>首先%MuZhou(dalao)</em></strong><br><strong><em>首先%MuZhou(dalao)</em></strong><br><strong><em>首先%MuZhou(dalao)</em></strong><br><strong><em>首先%MuZhou(dalao)</em></strong><br><strong><em>首先%MuZhou(dalao)</em></strong><br><strong><em>首先%MuZhou(dalao)</em></strong><br><strong><em>首先%MuZhou(dalao)</em></strong><br><strong><em>首先%MuZhou(dalao)</em></strong><br><strong>转载自<a href="http://muzhou.tech/oi/2016/11/05/vim/" target="_blank" rel="external">MuZhou的博客</a></strong>  </p>
<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p><img src="https://i4.buimg.com/590856/38127f343bdacf31.png" alt=""></p>
<p>Vim 是从 vi 发展出来的一个文本编辑器，代码补完、编译及错误跳转等方便编程的功能特别丰富，在程序员中被广泛使用，和 Emacs 并列成为类 Unix 系统用户最喜欢的编辑器  </p>
<p>本文将以打一道题为背景讲述如何使用 vim，请以看 算法竞赛入门经典 的心态看本文(即不求甚解)  </p>
<p>注意:  </p>
<ul>
<li>本文极具个人使用风格</li>
<li>Linux 特指 CCF 2016-10-08 发布的 基于 Ubuntu14.04 的 NOI-Linux</li>
<li>Windows 特指 WindowsXP~Windows7 的 Windows 版本</li>
</ul>
<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><h2 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h2><p>(其实系统自带，可以跳过)  </p>
<pre><code>ctrl-alt-t //讲道理会打开一个命令行终端
sudo apt-get install vim
</code></pre><h2 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h2><ol>
<li>访问 <a href="http://www.vim.org/" target="_blank" rel="external">vim 官方网站</a></li>
<li>点击左侧 Download</li>
<li>点击关键字 PC: MS-DOS and MS-Windows</li>
<li>你会看到 gvim@@.exe (@@表示版本号)</li>
<li>下载安装即可</li>
</ol>
<h1 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h1><h2 id="安装g"><a href="#安装g" class="headerlink" title="安装g++"></a>安装g++</h2><h3 id="Linux-1"><a href="#Linux-1" class="headerlink" title="Linux"></a>Linux</h3><p>(其实系统自带，可以跳过)  </p>
<pre><code>ctrl-alt-t
sudo apt-get install g++
</code></pre><h3 id="Windows-1"><a href="#Windows-1" class="headerlink" title="Windows"></a>Windows</h3><ol>
<li>安装 MinGW 或 Dev-C++ (尝试 MinGW 的请自行探索，以下是 Dev-C++ 的步骤)</li>
<li>在安装目录中寻找 bin 或 MinGW32/bin</li>
<li>将上述目录加入系统环境变量 PATH 中(详细方法自行查阅网络)</li>
</ol>
<h2 id="vim的配置文件"><a href="#vim的配置文件" class="headerlink" title="vim的配置文件"></a>vim的配置文件</h2><h3 id="打开-vim"><a href="#打开-vim" class="headerlink" title="打开 vim"></a>打开 vim</h3><h4 id="Linux-2"><a href="#Linux-2" class="headerlink" title="Linux"></a>Linux</h4><pre><code>ctrl-alt-t
vim
</code></pre><h4 id="Windows-2"><a href="#Windows-2" class="headerlink" title="Windows"></a>Windows</h4><p>双击桌面图标 gVim @@.exe (不要管另外两个)  </p>
<h3 id="编写配置文件"><a href="#编写配置文件" class="headerlink" title="编写配置文件"></a>编写配置文件</h3><p>注意，打开 vim 之后千万不要乱动键盘，因为现在键盘上的<strong>大部分按键都是命令</strong>  </p>
<p>现在，遵循刘汝佳精神，先按下面的步骤做，后面会详细说明他们的含义  </p>
<pre><code>:e $HOME/.vimrc &quot;请注意观察光标位置的变化
</code></pre><p>这时讲道理会提示打开了一个新文件  </p>
<pre><code>i &quot;对，这是一个命令，注意观察光标和左下角的变化
:set number &quot;有没有发现这里的注释是双引号开头的?
:set tabstop=4 &quot;配置文件中的注释就是这样的
:set shiftwidth=4 &quot;请不要在等号前后加空格
:set autoindent
:set smartindent
ESC &quot;也可以按 ctrl-[
:w &quot;观察
:q &quot;观察
</code></pre><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><h2 id="用-vim-打开文件"><a href="#用-vim-打开文件" class="headerlink" title="用 vim 打开文件"></a>用 vim 打开文件</h2><h3 id="Linux-3"><a href="#Linux-3" class="headerlink" title="Linux"></a>Linux</h3><pre><code>ctrl-alt-t
cd (你准备存放文件的路径)
vim
:e (文件名，不存在该文件就会自动新建，这也就是新建文件的方法)
</code></pre><h3 id="Windows-3"><a href="#Windows-3" class="headerlink" title="Windows"></a>Windows</h3><ol>
<li>找到/新建文件</li>
<li>右键</li>
<li>用gvim打开</li>
</ol>
<p>:e 指令就是打开文件，当文件名很长的时候，你可以打前面部分内容，按 TAB 键会自动补全文件名  </p>
<h2 id="关于-vim-的模式"><a href="#关于-vim-的模式" class="headerlink" title="关于 vim 的模式"></a>关于 vim 的模式</h2><p>这里要解释一下 vim 的使用姿势  </p>
<p>vim 有一种叫做 模式 的东西  </p>
<ul>
<li>刚打开 vim 时处在普通模式下，这时键盘上的大部分按键都是命令，光标可以覆盖整个字符</li>
<li>普通模式下按 i 或 a 进入插入模式，这时 vim 就像一个普通的编辑器，光标处在字符之间，按 ESC 或 ctrl-[ 回到普通模式</li>
<li>普通模式下按 R (注意大小写)进入替换模式，这时和插入模式很像，但输入的字符会覆盖原来的内容</li>
<li>普通模式下按：进入命令模式，还记得上面的那些：吗</li>
</ul>
<p><em>其实还有更多的模式与切换模式的方法，下面将详细探究</em>  </p>
<h2 id="关于-vim-的操作"><a href="#关于-vim-的操作" class="headerlink" title="关于 vim 的操作"></a>关于 vim 的操作</h2><p>为什么 vim 好用？普通模式很重要！  </p>
<p>现在先打开一个文本内容足够长的文件并尝试以下命令  </p>
<p><strong>这些命令需要你长时间的使用才能熟练使用，但是请注意，这是有意义的</strong>  </p>
<h3 id="移动"><a href="#移动" class="headerlink" title="移动"></a>移动</h3><table>
<thead>
<tr>
<th style="text-align:center"></th>
<th style="text-align:center"></th>
<th style="text-align:center"></th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"></td>
<td style="text-align:center">k</td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">h</td>
<td style="text-align:center"></td>
<td style="text-align:center">l</td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:center">j</td>
<td style="text-align:center"></td>
</tr>
</tbody>
</table>
<p>上面的表格形象的解释了移动光标的命令及含义，即 h j k l，当你用习惯以后会喜欢上这种设定的，特别是 Linux 用户  </p>
<pre><code>ctrl-u
ctrl-d
</code></pre><p>这两个命令可以半屏半屏地移动光标  </p>
<pre><code>gg
G
</code></pre><p>对，就是这么按，一个是到文件头，一个是到文件尾  </p>
<pre><code>:233
</code></pre><p>直接输入数字会跳到指定行，这里会跳到第 233 行  </p>
<p><strong>请多多使用上面几个命令移动光标，较为熟悉后再看下面的内容</strong>  </p>
<h3 id="复制-剪切-粘贴"><a href="#复制-剪切-粘贴" class="headerlink" title="复制 剪切 粘贴"></a>复制 剪切 粘贴</h3><pre><code>dd
yy
p
P
</code></pre><p>这其实是三个命令</p>
<p>dd会移除整行，这也是删除整行的方法<br>yy会复制整行<br>p 与 P 会放置之前移走或复制的内容，方向类似于之前的 o 和 O  </p>
<pre><code>v
V
</code></pre><p>这是精确复制的方法，同时这也叫做可视模式，小写会从当前位置开始，移动光标至你想要的位置之后使用 y (复制)或 d (移除)即可，大写可以进行多行操作  </p>
<pre><code>x
</code></pre><p>可以删除单个字符</p>
<h3 id="恢复"><a href="#恢复" class="headerlink" title="恢复"></a>恢复</h3><p>有没有发现，如果你错删内容了怎么办  </p>
<pre><code>u
ctrl-r
</code></pre><p>u 可以无限恢复更改<br>ctrl-r 可以无限恢复 u 的更改<br>是不是有点乱？自己试试就知道了  </p>
<h3 id="花式插入"><a href="#花式插入" class="headerlink" title="花式插入"></a>花式插入</h3><p><em>记得写完内容后回到普通模式</em></p>
<p>只移动光标当然没用了，我们要编辑！所以要进入插入模式！</p>
<pre><code>i
a
</code></pre><p>上面已经提到过了，区别在于 i 会使光标移动到它原来覆盖的字符与左面字符的中间，a 是另一边<br>有什么用呢？你试试在行尾添加字符，用 i 是不是不太对劲，那就用 a 吧  </p>
<pre><code>I
A
</code></pre><p>好眼熟啊…对的，大写了，有什么区别呢，I 会使光标移动到行首并进入 insert 模式，A 相反，有异曲同工之妙吧，快自己尝试一下  </p>
<pre><code>o
O
</code></pre><p>这不一样，这不一样，这不一样<br>又是大小写…小写会让光标在下面挤出一个新行，大写相反  </p>
<p>这里给出一个好用的按键组合  </p>
<pre><code>ggo
</code></pre><p>就是 gg 和 o 的组合，<strong>添加头文件利器！</strong><br>在使用中你会发现更多好用的组合的  </p>
<h3 id="奇怪的替换模式"><a href="#奇怪的替换模式" class="headerlink" title="奇怪的替换模式"></a>奇怪的替换模式</h3><p><em>请慎用这个奇怪的模式</em>  </p>
<pre><code>r
R
</code></pre><p>注意光标与左下角的变化，r 会使你进入单字符修改模式，按 r 之后按下的一个字符会替换光标覆盖的那个字符，按 R 后可以一直往后覆盖字符，直到使用 ESC 或 ctrl-[ 退出  </p>
<p>现在你已经学会了很多东西了吧，现在已经忘记很多了吧，这是正常现象，要多多复习  </p>
<h2 id="保存文件与退出"><a href="#保存文件与退出" class="headerlink" title="保存文件与退出"></a>保存文件与退出</h2><p>有了上面的内容，你就可以完整的打完一个代码了，可是怎么保存呢？  </p>
<pre><code>:w
:q
</code></pre><p>上面曾经使用过，：进入命令模式，w 是 write 的缩写(vim 的命令支持缩写和 tab 键补全)，即写入文件，q 是 quit 的缩写，即退出<br>w 指令是有可选参数的，在 w 后加文件名就是 另存为 了  </p>
<h2 id="用-vim-编译"><a href="#用-vim-编译" class="headerlink" title="用 vim 编译?"></a>用 vim 编译?</h2><p>代码是需要编译的，但投奔 vim 之后我们就可以<strong>抛弃其他 IDE</strong> (例如 Dev-C++)了！  </p>
<p>事实上，我们的 c++ 代码的编译靠的是 g++，而不是 IDE，这就是为什么刚开始的时候我们要找到 g++ 了  </p>
<p>在普通模式下，以文件名为 demo.cpp 为例  </p>
<pre><code>:!g++ % -o demo -Wall
</code></pre><p>解释一下  </p>
<ul>
<li>：是切换为命令模式</li>
<li>！表示将后面的内容递交给命令行处理，也就是说之后的内容是命令行的命令</li>
<li>g++ 表示调用编译器，Windows 没有添加环境变量或加错的话就无法成功调用</li>
<li>% 是 vim 支持的正则表达式，vim 会在你回车后将它替换为当前文件的名字，也就是 demo.cpp</li>
<li>-o 是 g++ 的参数，表示之后的内容是输出的可执行文件的名字，这里就是 demo(Windows 会自动输出为 demo.exe)</li>
<li>-Wall 是 g++ 的编译选项，提供更多的优化建议</li>
</ul>
<p>回车后，Linux 会回到命令行，Windows 会弹出一个命令行窗口，窗口中会给出编译信息，按任意键返回  </p>
<h2 id="强大的分屏功能"><a href="#强大的分屏功能" class="headerlink" title="强大的分屏功能"></a>强大的分屏功能</h2><p>编译通过之后当然要过样例啦，首先我们要新建一个输入文件，不过我们还将依赖 vim，怎么做呢？  </p>
<p><em>不要再手打样例了…</em>  </p>
<p>我们可以输入 :e demo.in 来新建文件呀，还记得吗？之后再 :e demo.cpp 回来，不过这样<strong>太 low 了</strong>  </p>
<pre><code>:sp demo.in
:vsp demo.in
</code></pre><p>效果请自行尝试，很好用吧，你可以选择自己喜欢的方法打开新窗口<br>写好输入文件之后怎么关闭呢？  </p>
<pre><code>:wq
</code></pre><p>看到没有，这样更方便了，保存并关闭，而且你会更深刻的理解 :q 命令，它退出的并不是整个程序而是窗口，那么怎么退出整个程序呢？  </p>
<pre><code>:qa
</code></pre><p>这是啥？<br>quit 并且是 all  </p>
<hr>
<p>现在可以运行程序了  </p>
<pre><code>:!./demo
:!demo
</code></pre><p>上面是 Linux 命令，下面是 Windows 命令，这里展示了 Linux 的特性，必须声明文件就在当前目录<br>这次仍然会弹出一个窗口，即使程序崩溃也会有提示，即使没有写 while(1) 也会显示 输入任意键返回，这是 vim 为我们做的，是不是很贴心啊  </p>
<p>如果没有正常结束怎么办？  </p>
<ul>
<li>如果崩溃请调代码，注意，vim 中输入：之后可以使用上下键查阅历史记录，不需要再打字咯  </li>
<li>如果停不下来请输入 ctrl-c 强制停止，并调代码  </li>
</ul>
<hr>
<p>现在应该已经正常输出了，怎么分屏打开输出文件呢？哦，看上面的内容去(建议使用上下分屏)  </p>
<blockquote>
<p>可是啊…输出文件一共才几行却占了半屏，我要求同时看代码和输出文件！！！  </p>
</blockquote>
<pre><code>:res 10
</code></pre><p>数字代表了大小，请自行选择  </p>
<blockquote>
<p>可是啊…光标怎么挪到另一个窗口里啊</p>
</blockquote>
<pre><code>ctrl-w w
</code></pre><p>这是个组合键，ctrl-w 表示后面的命令是窗口命令，w 是其中的一个，会让光标在文件之间循环移动，你也可以选择使用 h j k l，会使光标定向移动到一个方向的窗口  </p>
<p>这里要插一句，vim 打开大文件是会<strong>有些</strong>卡，这出现在输出大量 Debug 语句的时候  </p>
<h1 id="更多"><a href="#更多" class="headerlink" title="更多"></a>更多</h1><p>上面的内容已经足够我们打一打代码了，但是我们还需要知道更多的内容  </p>
<h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><h3 id="配置文件的路径"><a href="#配置文件的路径" class="headerlink" title="配置文件的路径"></a>配置文件的路径</h3><p>还记得写配置文件的方法吗？  </p>
<pre><code>:e $HOME/.vimrc
</code></pre><p>我们已经知道了 :e 是打开文件，可是 $HOME 是什么呢？<br>它代表了当前用户的用户文件夹位置，而且是一个隐藏文件，每次 vim 启动时都会自动访问这个文件并执行，你可以尝试加入混乱的字符并重启 vim，vim 会给出错误信息  </p>
<p>还有一个配置文件的路径  </p>
<pre><code>:e $VIM/vimrc
</code></pre><p>这个是 vim 的安装路径，并且文件不是隐藏的，有什么区别呢？<br>它的作用域是整个系统，上面的作用域是单个用户  </p>
<h3 id="配置文件的内容"><a href="#配置文件的内容" class="headerlink" title="配置文件的内容"></a>配置文件的内容</h3><p>你有没有发现配置文件中的内容挺像命令模式的命令啊，都带：<br>对啊，就是这样啊，快尝试这样做  </p>
<ol>
<li>删除配置文件中的 :set number</li>
<li>重启 vim，已经不再显示行号</li>
<li>在普通模式下输入 :set number</li>
<li>出现行号</li>
<li>重启 vim，行号消失</li>
</ol>
<p>有没有发现什么？对，配置文件的作用就是帮你输入命令…  </p>
<p>现在解释一下这些命令的含义  </p>
<pre><code>:set number &quot;行号
:set tabstop=4 &quot;tab 键的长度，默认为 8
:set shiftwidth=4 &quot;自动缩进的长度，默认为 8
:set autoindent &quot;智能缩进
:set smartindent &quot;同上，一起使用效果好
</code></pre><p>具体的作用请像刚才自行尝试<br>更多好用的命令  </p>
<pre><code>:set showmatch &quot;在输入右括号时会使光标跳至匹配括号再跳回来
&quot;但事实上光标还在这里，你不用等它
:set cursorline &quot;高亮光标所在行
:color evening &quot;著名的 vim 主题
&quot;你可以使用 :color default 切换回来
</code></pre><h2 id="查找-替换"><a href="#查找-替换" class="headerlink" title="查找 替换"></a>查找 替换</h2><p>更高级高效的操作方法  </p>
<pre><code>?int
</code></pre><p>并不是只有：可以让你进入命令模式，？也可以，并且是查找命令，它会将光标跳到第一次出现查找内容的地方，在 gvim 中还会高亮所有找到的字符，再次输入？并回车可以直接跳到下一个，不用再输入查找的内容  </p>
<blockquote>
<p>可是 gvim 的高亮会一直保持应该怎么办？  </p>
</blockquote>
<pre><code>?haha
</code></pre><p>搜不到匹配项就不会高亮了  </p>
<pre><code>:%s/int/long long/g
</code></pre><p>: 则是我们熟知的，%s 是正则表达式的内容，语法是 %s/原内容/要替换的内容 注意不要输入多余的空格，默认只会替换每行第一次出现的 原内容，/g 使它替换所有的内容  </p>
<h2 id="文件与自动恢复"><a href="#文件与自动恢复" class="headerlink" title="文件与自动恢复"></a>文件与自动恢复</h2><p>使用 vim 的时候最不用担心的就是电脑 BOMB 并重启了，在你使用 vim 编辑文件的时候，vim 会创建一个隐藏的交换文件，他会储存着你较新的修改，只有写入命令才会让源文件更新，在每次载入文件的时候，vim 都会查看是否存在交换文件(如果正常关闭的话 vim 会自动删除交换文件)，如果存在就会给出提示  </p>
<p>有时也会出现一些奇怪的问题，例如 vim 提示 demo.out 存在交换文件，这时还是果断删除交换文件吧  </p>
<p>如果你做出了修改又不想保存(例如做出了错误的修改），你不必使用 u 一步步返回，你可以这样做</p>
<pre><code>:q!
:e! demo2.cpp
</code></pre><p>在命令后加感叹号表示强制执行，不保存当前文件就退出或打开其他文件，这样下次加载时 vim 就不会提示交换文件的问题了  </p>
<p>你也可以设置定时自动保存或每次保存都生成备份文件，在此不再赘述  </p>
<h2 id="一次执行多次命令"><a href="#一次执行多次命令" class="headerlink" title="一次执行多次命令"></a>一次执行多次命令</h2><p>在普通模式下输入数字会发生什么呢？<br>什么也没有发生<br>再输入命令呢，比如 u？<br>哦哦哦，天啊…<br>先用 ctrl-r 恢复过来吧<br>先输入数字表示执行后面的命令的次数，默认为 1<br>有时会很有用<br>如果输入了数字又不想执行呢？<br>按 ESC 会取消任何还未执行的命令，包括这些数字  </p>
<h2 id="缩进小助手"><a href="#缩进小助手" class="headerlink" title="缩进小助手"></a>缩进小助手</h2><p>有的时候代码的缩进会很奇怪啊，怎么办呢，我们不用一行一行改，只要在普通模式下输入<code>&lt;</code>或<code>&gt;</code>，再输入从这一行开始要修改的行数，回车<br>配合上面讲的命令前面的数字，简直就是神器啊！！！  </p>
<h2 id="对于长变量的补全"><a href="#对于长变量的补全" class="headerlink" title="对于长变量的补全"></a>对于长变量的补全</h2><p>如果你喜欢长变量名，难道要手输变量？！快打前几个字符，再按 ctrl-p ，此时如果有多种选择它就会弹出一个菜单，否则就会直接补全  </p>
<p>菜单上的操作  </p>
<ul>
<li>ctrl-p 选择下一项</li>
<li>ctrl-n 选择上一项</li>
<li>ctrl-d 使用高亮行补全代码</li>
</ul>
<p>这样就不会很费手了吧</p>
<h2 id="应该没有什么必要东西的了"><a href="#应该没有什么必要东西的了" class="headerlink" title="应该没有什么必要东西的了"></a>应该没有什么必要东西的了</h2>]]></content>
      
        
        <tags>
            
            <tag> OI </tag>
            
            <tag> 转载 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[OI知识总结]]></title>
      <url>https://blog.ltmcpe.cn/2016/11/05/OI%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/</url>
      <content type="html"><![CDATA[<p>马上就要考试(NOIP2016)了，很慌很慌很慌，怎么办？<br><strong>嗨呀</strong>，慌是没有用的，学了这么多(shao)，也是时候总结总结了<br>那么在这篇博客里我主要写一下OI(准确来说是NOIP)的知识点总结  </p>
<h1 id="暴力"><a href="#暴力" class="headerlink" title="暴力"></a>暴力</h1><h2 id="枚举"><a href="#枚举" class="headerlink" title="枚举"></a>枚举</h2><h2 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h2><h1 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h1><h2 id="栈"><a href="#栈" class="headerlink" title="栈"></a>栈</h2><h2 id="队列"><a href="#队列" class="headerlink" title="队列"></a>队列</h2><h2 id="堆-优先队列"><a href="#堆-优先队列" class="headerlink" title="堆(优先队列)"></a>堆(优先队列)</h2><h2 id="树"><a href="#树" class="headerlink" title="树"></a>树</h2><h3 id="线段树"><a href="#线段树" class="headerlink" title="线段树"></a>线段树</h3><h3 id="平衡树"><a href="#平衡树" class="headerlink" title="平衡树"></a>平衡树</h3><h3 id="Trie树"><a href="#Trie树" class="headerlink" title="Trie树"></a>Trie树</h3><h3 id="树套树"><a href="#树套树" class="headerlink" title="树套树"></a>树套树</h3><h2 id="单调栈"><a href="#单调栈" class="headerlink" title="单调栈"></a>单调栈</h2><h2 id="单调队列"><a href="#单调队列" class="headerlink" title="单调队列"></a>单调队列</h2><h1 id="图论"><a href="#图论" class="headerlink" title="图论"></a>图论</h1><h2 id="图的存储"><a href="#图的存储" class="headerlink" title="图的存储"></a>图的存储</h2><h3 id="邻接矩阵"><a href="#邻接矩阵" class="headerlink" title="邻接矩阵"></a>邻接矩阵</h3><h3 id="vector方式"><a href="#vector方式" class="headerlink" title="vector方式"></a>vector方式</h3><h3 id="邻接链表-前向星"><a href="#邻接链表-前向星" class="headerlink" title="邻接链表/前向星"></a>邻接链表/前向星</h3><h2 id="最短路算法"><a href="#最短路算法" class="headerlink" title="最短路算法"></a>最短路算法</h2><h3 id="Dijkstra-单源"><a href="#Dijkstra-单源" class="headerlink" title="Dijkstra(单源)"></a>Dijkstra(单源)</h3><h3 id="SPFA-单源"><a href="#SPFA-单源" class="headerlink" title="SPFA(单源)"></a>SPFA(单源)</h3><h3 id="Floyed-全源"><a href="#Floyed-全源" class="headerlink" title="Floyed(全源)"></a>Floyed(全源)</h3><h2 id="网络流"><a href="#网络流" class="headerlink" title="网络流"></a>网络流</h2><h3 id="EK-最大流"><a href="#EK-最大流" class="headerlink" title="EK(最大流)"></a>EK(最大流)</h3><h3 id="Dinic-最大流"><a href="#Dinic-最大流" class="headerlink" title="Dinic(最大流)"></a>Dinic(最大流)</h3><h3 id="预流推进-最大流"><a href="#预流推进-最大流" class="headerlink" title="预流推进(最大流)"></a>预流推进(最大流)</h3><h3 id="MCMF-最小费用最大流"><a href="#MCMF-最小费用最大流" class="headerlink" title="MCMF(最小费用最大流)"></a>MCMF(最小费用最大流)</h3><h1 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h1><h2 id="Hash"><a href="#Hash" class="headerlink" title="Hash"></a>Hash</h2><h2 id="Manacher"><a href="#Manacher" class="headerlink" title="Manacher"></a>Manacher</h2><h2 id="KMP"><a href="#KMP" class="headerlink" title="KMP"></a>KMP</h2><h2 id="AC自动机"><a href="#AC自动机" class="headerlink" title="AC自动机"></a>AC自动机</h2><p>KMP + Trie = AC自动机  </p>
<h1 id="分治"><a href="#分治" class="headerlink" title="分治"></a>分治</h1><h1 id="数论"><a href="#数论" class="headerlink" title="数论"></a>数论</h1><h2 id="斐波那契数列"><a href="#斐波那契数列" class="headerlink" title="斐波那契数列"></a>斐波那契数列</h2><h2 id="素数测试"><a href="#素数测试" class="headerlink" title="素数测试"></a>素数测试</h2><h2 id="素数筛法"><a href="#素数筛法" class="headerlink" title="素数筛法"></a>素数筛法</h2><h2 id="欧几里得与扩展欧几里得"><a href="#欧几里得与扩展欧几里得" class="headerlink" title="欧几里得与扩展欧几里得"></a>欧几里得与扩展欧几里得</h2><h2 id="唯一分解定理"><a href="#唯一分解定理" class="headerlink" title="唯一分解定理"></a>唯一分解定理</h2><h2 id="快速幂"><a href="#快速幂" class="headerlink" title="快速幂"></a>快速幂</h2><h2 id="欧拉函数"><a href="#欧拉函数" class="headerlink" title="欧拉函数"></a>欧拉函数</h2><h2 id="高精度"><a href="#高精度" class="headerlink" title="高精度"></a>高精度</h2><h1 id="DP"><a href="#DP" class="headerlink" title="DP"></a>DP</h1>]]></content>
      
        
        <tags>
            
            <tag> OI </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>https://blog.ltmcpe.cn/2016/11/03/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[COGS2153. 快速红包变换 - 解题报告]]></title>
      <url>https://blog.ltmcpe.cn/2016/11/03/COGS2153-%E5%BF%AB%E9%80%9F%E7%BA%A2%E5%8C%85%E5%8F%98%E6%8D%A2-%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A/</url>
      <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a><a href="http://218.28.19.228/cogs/problem/problem.php?pid=2153" target="_blank" rel="external">题目</a></h1><p>2153.快速红包变换<br>★★★★   输入文件：redbag.in   输出文件：redbag.out   简单对比<br>时间限制：1 s   内存限制：256 MB  </p>
<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>春节，又是一年一度发红包的时节。<br>这天晚上，小O睡的正香，她梦见在NOI上拿了金牌，过不了多久，保送清华，进入计算机系，打入ACM，赢取金奖，走上人生巅峰，想想还有点小激动。<br>这时，残暴的笑声吵醒了小O。<br>“哈哈！愚蠢的人类！这种纸质的红包早就不能镇压本座了！哈哈！”<br>“看你一脸懵逼，没错，本座就是‘祟’！愚蠢的人类！用红包镇压了本座千百年！如今！QQ微信红包当世，人类寄托在压岁钱里的信念已经冲淡了！这，正是本座重现大地的契机！哈哈！”<br>“人类，你是本座遇到的第一个人！你来和本座玩个游戏吧！恩，就用这可恶的红包吧！哈哈！”<br>“本座，在这里放一些红包，然后！对里面的钱数做一些变换，你，要回答本座的问题，明白的了吗！哈哈！”  </p>
<h2 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h2><p>第一行，一个数N，表示红包的数量<br>第二行，N个数，表示红包A[1]，A[2]……A[N]初始的钱数<br>第三行，一个数M，表示变换和询问的个数和<br>第4~3+M行，每行包含一条命令令，和命令的具体细节。<br>命令如下：<br>Cadd    l r a    (add 从A[l]到A[r]每个红包钱数加a)<br>Cchange    l r a    (change 从A[l]到A[r]每个红包钱数变为a)<br>Cbmax    l r a    (be max 从A[l]到A[r]每个红包钱数变为max(A[i],a))<br>Cbmin    l r a    (be min 从A[l]到A[r]每个红包钱数变为min(A[i],a))<br>Qsum    l r    (sum 求从A[l]到A[r]每个红包钱数和)<br>Qwmax    l r    (what is max 从A[l]到A[r]每个红包钱数的最大值)<br>Qwmin    l r    (what is min 从A[l]到A[r]每个红包钱数的最小值)<br>Qnmax    l r    (number of max 从A[l]到A[r]每个红包钱数的最大值的个数)<br>Qnmin    l r    (number of min 从A[l]到A[r]每个红包钱数的最小值的个数)  </p>
<h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><p>针对每个询问，输出结果，每行一个。  </p>
<h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入1"><a href="#样例输入1" class="headerlink" title="样例输入1"></a>样例输入1</h3><p>10<br>4 8 4 7 2 2 5 2 9 8<br>10<br>Qsum 1 6<br>Qsum 3 4<br>Cadd 3 4 8<br>Cadd 5 6 6<br>Qsum 6 9<br>Cadd 7 8 4<br>Qsum 8 8<br>Cadd 7 8 8<br>Cadd 2 5 2<br>Cadd 7 10 1  </p>
<h3 id="样例输出1"><a href="#样例输出1" class="headerlink" title="样例输出1"></a>样例输出1</h3><p>27<br>11<br>24<br>6  </p>
<h3 id="样例输入2"><a href="#样例输入2" class="headerlink" title="样例输入2"></a>样例输入2</h3><p>10<br>7 4 4 0 8 1 1 9 3 3<br>10<br>Cbmin 2 10 3<br>Qsum 2 7<br>Cbmax 2 8 5<br>Cbmin 2 4 5<br>Qsum 9 10<br>Cadd 3 6 9<br>Cbmin 10 10 7<br>Qnmax 7 7<br>Qnmax 4 5<br>Cadd 4 9 2  </p>
<h3 id="样例输出2"><a href="#样例输出2" class="headerlink" title="样例输出2"></a>样例输出2</h3><p>11<br>6<br>1<br>2 </p>
<h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><p>各组数据N，M取值，指令种类如下<br>10 10 Cadd Qsum<br>1000 1000 Cadd Cchange Qsum<br>100000 100000 Cadd Cchange Qsum<br>100000 100000 Cadd Cchange Qsum<br>100 100 全部<br>10000 10000 全部<br>10000 10000 全部<br>100000 100000 全部<br>100000 100000 全部<br>100000 100000 全部<br>题目中全部数据可用int保存  </p>
<h2 id="来源"><a href="#来源" class="headerlink" title="来源"></a>来源</h2><p><a href="http://218.28.19.228/cogs/problem/problem.php?pid=2153" target="_blank" rel="external">COGS2153</a><br>UBWH  </p>
<h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><p>最关键的东西在第140行的注释，这个点坑了我好长时间,,,  </p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div><div class="line">264</div><div class="line">265</div><div class="line">266</div><div class="line">267</div><div class="line">268</div><div class="line">269</div><div class="line">270</div><div class="line">271</div><div class="line">272</div><div class="line">273</div><div class="line">274</div><div class="line">275</div><div class="line">276</div><div class="line">277</div><div class="line">278</div><div class="line">279</div><div class="line">280</div><div class="line">281</div><div class="line">282</div><div class="line">283</div><div class="line">284</div><div class="line">285</div><div class="line">286</div><div class="line">287</div><div class="line">288</div><div class="line">289</div><div class="line">290</div><div class="line">291</div><div class="line">292</div><div class="line">293</div><div class="line">294</div><div class="line">295</div><div class="line">296</div><div class="line">297</div><div class="line">298</div><div class="line">299</div><div class="line">300</div><div class="line">301</div><div class="line">302</div><div class="line">303</div><div class="line">304</div><div class="line">305</div><div class="line">306</div><div class="line">307</div><div class="line">308</div><div class="line">309</div><div class="line">310</div><div class="line">311</div><div class="line">312</div><div class="line">313</div><div class="line">314</div><div class="line">315</div><div class="line">316</div><div class="line">317</div><div class="line">318</div><div class="line">319</div><div class="line">320</div><div class="line">321</div><div class="line">322</div><div class="line">323</div><div class="line">324</div><div class="line">325</div><div class="line">326</div><div class="line">327</div><div class="line">328</div><div class="line">329</div><div class="line">330</div><div class="line">331</div><div class="line">332</div><div class="line">333</div><div class="line">334</div><div class="line">335</div><div class="line">336</div><div class="line">337</div><div class="line">338</div><div class="line">339</div><div class="line">340</div><div class="line">341</div><div class="line">342</div><div class="line">343</div><div class="line">344</div><div class="line">345</div><div class="line">346</div><div class="line">347</div><div class="line">348</div><div class="line">349</div><div class="line">350</div><div class="line">351</div><div class="line">352</div><div class="line">353</div><div class="line">354</div><div class="line">355</div><div class="line">356</div><div class="line">357</div><div class="line">358</div><div class="line">359</div><div class="line">360</div><div class="line">361</div><div class="line">362</div><div class="line">363</div><div class="line">364</div><div class="line">365</div><div class="line">366</div><div class="line">367</div><div class="line">368</div><div class="line">369</div><div class="line">370</div><div class="line">371</div><div class="line">372</div><div class="line">373</div><div class="line">374</div><div class="line">375</div><div class="line">376</div><div class="line">377</div><div class="line">378</div><div class="line">379</div><div class="line">380</div><div class="line">381</div><div class="line">382</div><div class="line">383</div><div class="line">384</div><div class="line">385</div><div class="line">386</div><div class="line">387</div><div class="line">388</div><div class="line">389</div><div class="line">390</div><div class="line">391</div><div class="line">392</div><div class="line">393</div><div class="line">394</div><div class="line">395</div><div class="line">396</div><div class="line">397</div><div class="line">398</div><div class="line">399</div><div class="line">400</div><div class="line">401</div><div class="line">402</div><div class="line">403</div><div class="line">404</div><div class="line">405</div><div class="line">406</div><div class="line">407</div><div class="line">408</div><div class="line">409</div><div class="line">410</div><div class="line">411</div><div class="line">412</div><div class="line">413</div><div class="line">414</div><div class="line">415</div><div class="line">416</div><div class="line">417</div><div class="line">418</div><div class="line">419</div><div class="line">420</div><div class="line">421</div><div class="line">422</div><div class="line">423</div><div class="line">424</div><div class="line">425</div><div class="line">426</div><div class="line">427</div><div class="line">428</div><div class="line">429</div><div class="line">430</div><div class="line">431</div><div class="line">432</div><div class="line">433</div><div class="line">434</div><div class="line">435</div><div class="line">436</div><div class="line">437</div><div class="line">438</div><div class="line">439</div><div class="line">440</div><div class="line">441</div><div class="line">442</div><div class="line">443</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">100000</span>+<span class="number">100</span>;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</div><div class="line"><span class="keyword">const</span> <span class="keyword">char</span> cmds[<span class="number">9</span>][<span class="number">20</span>] = &#123;<span class="string">"Cadd"</span>, <span class="string">"Cchange"</span>, <span class="string">"Cbmax"</span>, <span class="string">"Cbmin"</span>, <span class="string">"Qsum"</span>, <span class="string">"Qwmax"</span>, <span class="string">"Qwmin"</span>, <span class="string">"Qnmax"</span>, <span class="string">"Qnmin"</span>&#125;;</div><div class="line">FILE *fin, *fout;</div><div class="line"><span class="keyword">int</span> n, m, A[maxn];</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">max</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123; <span class="keyword">return</span> a&lt;b?b:a; &#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">min</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123; <span class="keyword">return</span> a&lt;b?a:b; &#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">Q_read</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="keyword">int</span> ans = <span class="number">0</span>;</div><div class="line">	<span class="keyword">char</span> c = <span class="number">0</span>;</div><div class="line">	<span class="keyword">while</span>(c &lt; <span class="string">'0'</span> || c &gt; <span class="string">'9'</span>) c = fgetc(fin);</div><div class="line">	<span class="keyword">while</span>(c &gt;= <span class="string">'0'</span> &amp;&amp; c &lt;= <span class="string">'9'</span>) &#123;</div><div class="line">		ans *= <span class="number">10</span>;</div><div class="line">		ans += c-<span class="string">'0'</span>;</div><div class="line">		c = fgetc(fin);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> ans;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">Q_write</span><span class="params">(<span class="keyword">int</span> a)</span> </span>&#123;</div><div class="line">	<span class="keyword">int</span> tmp = a, now = <span class="number">5</span>;</div><div class="line">	<span class="keyword">int</span> buf[<span class="number">6</span>];</div><div class="line">	<span class="keyword">while</span>(tmp &gt; <span class="number">0</span>) &#123;</div><div class="line">		buf[now] = tmp%<span class="number">10</span>;</div><div class="line">		now--;</div><div class="line">		tmp /= <span class="number">10</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = now+<span class="number">1</span>; i &lt;= <span class="number">5</span>; i++) fputc(buf[i]+<span class="string">'0'</span>, fout); </div><div class="line">&#125;</div><div class="line"><span class="keyword">struct</span> SEG &#123;</div><div class="line">	<span class="keyword">int</span> n;</div><div class="line">	<span class="keyword">int</span> maxv[<span class="number">4</span>*maxn], minv[<span class="number">4</span>*maxn], sumv[<span class="number">4</span>*maxn];</div><div class="line">	<span class="keyword">int</span> nmax[<span class="number">4</span>*maxn], nmin[<span class="number">4</span>*maxn];</div><div class="line">	<span class="keyword">int</span> addv[<span class="number">4</span>*maxn], setv[<span class="number">4</span>*maxn];</div><div class="line">	SEG(<span class="keyword">int</span> n) &#123;</div><div class="line">		<span class="keyword">this</span>-&gt;n = n;</div><div class="line">		<span class="keyword">this</span>-&gt;build(<span class="number">1</span>, <span class="number">1</span>, n);</div><div class="line">	&#125; </div><div class="line">	<span class="keyword">int</span> oL, oR;</div><div class="line">	<span class="function"><span class="keyword">void</span> <span class="title">upcurpinfo</span><span class="params">(<span class="keyword">int</span> o, <span class="keyword">int</span> L, <span class="keyword">int</span> R)</span> </span>&#123;</div><div class="line">		<span class="keyword">int</span> lc = o*<span class="number">2</span>, rc = o*<span class="number">2</span>+<span class="number">1</span>;</div><div class="line">		<span class="keyword">if</span>(setv[o] != INF) &#123;</div><div class="line">			minv[o] = maxv[o] = setv[o];</div><div class="line">			sumv[o] = setv[o]*(R-L+<span class="number">1</span>);</div><div class="line">			nmax[o] = nmin[o] = R-L+<span class="number">1</span>;</div><div class="line">		&#125; <span class="keyword">else</span> &#123;</div><div class="line">			<span class="keyword">if</span>(L == R) &#123;</div><div class="line">				sumv[o] = minv[o] = maxv[o] = A[L];</div><div class="line">				nmax[o] = nmin[o] = <span class="number">1</span>;</div><div class="line">			&#125; <span class="keyword">else</span> &#123;</div><div class="line">				sumv[o] = sumv[lc] + sumv[rc];</div><div class="line">				<span class="comment">//处理maxv&amp;nmax </span></div><div class="line">				<span class="keyword">if</span>(maxv[lc] == maxv[rc]) &#123; maxv[o] = maxv[lc]; nmax[o] = nmax[lc] + nmax[rc]; &#125;</div><div class="line">				<span class="keyword">else</span> <span class="keyword">if</span>(maxv[lc] &gt; maxv[rc]) &#123; maxv[o] = maxv[lc]; nmax[o] = nmax[lc]; &#125;</div><div class="line">				<span class="keyword">else</span> &#123; maxv[o] = maxv[rc]; nmax[o] = nmax[rc]; &#125;</div><div class="line">				<span class="comment">//处理minv&amp;nmin</span></div><div class="line">				<span class="keyword">if</span>(minv[lc] == minv[rc]) &#123; minv[o] = minv[lc]; nmin[o] = nmin[lc] + nmin[rc]; &#125;</div><div class="line">				<span class="keyword">else</span> <span class="keyword">if</span>(minv[lc] &gt; minv[rc]) &#123; minv[o] = minv[rc]; nmin[o] = nmin[rc]; &#125;</div><div class="line">				<span class="keyword">else</span> &#123; minv[o] = minv[lc]; nmin[o] = nmin[lc]; &#125;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(addv[o]) &#123; minv[o] += addv[o]; maxv[o] += addv[o]; sumv[o] += addv[o]*(R-L+<span class="number">1</span>); &#125;	</div><div class="line">	&#125;</div><div class="line">	<span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> o, <span class="keyword">int</span> L, <span class="keyword">int</span> R)</span> </span>&#123;</div><div class="line"><span class="comment">//		printf("build(o=%d, L=%d, R=%d) maxv=%d, minv=%d, sumv=%d, nmax=%d, nmin=%d, setv=%d, addv=%d\n", o, L, R, maxv[o], minv[o], sumv[o], nmax[o], nmin[o], setv[o], addv[o]);</span></div><div class="line">		setv[o] = INF; addv[o] = <span class="number">0</span>;</div><div class="line">		<span class="keyword">if</span>(L == R) &#123;</div><div class="line">			maxv[o] = minv[o] = sumv[o] = A[L];</div><div class="line">			nmax[o] = nmin[o] = <span class="number">1</span>;</div><div class="line">		&#125; <span class="keyword">else</span> &#123;</div><div class="line">			<span class="keyword">int</span> lc = o*<span class="number">2</span>, rc =o*<span class="number">2</span>+<span class="number">1</span>;</div><div class="line">			<span class="keyword">int</span> M = L + (R-L)/<span class="number">2</span>;</div><div class="line">			build(lc, L, M);</div><div class="line">			build(rc, M+<span class="number">1</span>, R);</div><div class="line">			upcurpinfo(o, L, R);</div><div class="line">		&#125; </div><div class="line"><span class="comment">//		printf("build(o=%d, L=%d, R=%d) maxv=%d, minv=%d, sumv=%d, nmax=%d, nmin=%d, setv=%d, addv=%d\n", o, L, R, maxv[o], minv[o], sumv[o], nmax[o], nmin[o], setv[o], addv[o]);</span></div><div class="line">	&#125;</div><div class="line">	<span class="function"><span class="keyword">void</span> <span class="title">pushdown</span><span class="params">(<span class="keyword">int</span> o)</span> </span>&#123;<span class="comment">//pushdown之后需更新左右子节点 </span></div><div class="line">		<span class="keyword">int</span> lc = o*<span class="number">2</span>, rc = o*<span class="number">2</span>+<span class="number">1</span>;</div><div class="line">		<span class="keyword">if</span>(setv[o] != INF) &#123;</div><div class="line">			setv[lc] = setv[rc] = setv[o];</div><div class="line">			addv[lc] = addv[rc] = <span class="number">0</span>;</div><div class="line">			setv[o] = INF;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(addv[o]) &#123;</div><div class="line">			addv[lc] += addv[o];</div><div class="line">			addv[rc] += addv[o];</div><div class="line">			addv[o] = <span class="number">0</span>;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">int</span> av;</div><div class="line">	<span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> o, <span class="keyword">int</span> L, <span class="keyword">int</span> R)</span> </span>&#123;</div><div class="line">		<span class="keyword">if</span>(L&gt;=oL &amp;&amp; R&lt;=oR) &#123;</div><div class="line">			addv[o] += av;</div><div class="line"><span class="comment">//			printf("addv[o=%d] = av=%d, L=%d, R=%d, oL=%d, oR=%d\n", o, av, L, R, oL, oR);</span></div><div class="line">		&#125; <span class="keyword">else</span> &#123;</div><div class="line">			pushdown(o);</div><div class="line">			<span class="keyword">int</span> lc = o*<span class="number">2</span>, rc = o*<span class="number">2</span>+<span class="number">1</span>;</div><div class="line">			<span class="keyword">int</span> M = L + (R-L)/<span class="number">2</span>;</div><div class="line">			<span class="keyword">if</span>(M &gt;= oL) add(lc, L, M); <span class="keyword">else</span> upcurpinfo(lc, L, M);</div><div class="line">			<span class="keyword">if</span>(M &lt; oR) add(rc, M+<span class="number">1</span>, R); <span class="keyword">else</span> upcurpinfo(rc, M+<span class="number">1</span>, R);</div><div class="line">		&#125;</div><div class="line">		upcurpinfo(o, L, R);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">int</span> sv;</div><div class="line">	<span class="function"><span class="keyword">void</span> <span class="title">set</span><span class="params">(<span class="keyword">int</span> o, <span class="keyword">int</span> L, <span class="keyword">int</span> R)</span> </span>&#123;</div><div class="line">		<span class="keyword">if</span>(L&gt;=oL &amp;&amp; R&lt;=oR) &#123;</div><div class="line">			setv[o] = sv; addv[o] = <span class="number">0</span>;</div><div class="line">		&#125; <span class="keyword">else</span> &#123;</div><div class="line"><span class="comment">//			fprintf(fout, "set(o=%d, L=%d, R=%d),oL=%d, oR=%d, sv=%d, pushdown(o=%d)\n", o, L, R, oL, oR, sv, o);</span></div><div class="line">			pushdown(o);</div><div class="line">			<span class="keyword">int</span> lc = o*<span class="number">2</span>, rc = o*<span class="number">2</span>+<span class="number">1</span>;</div><div class="line">			<span class="keyword">int</span> M = L + (R-L)/<span class="number">2</span>;</div><div class="line">			<span class="keyword">if</span>(M &gt;= oL) <span class="built_in">set</span>(lc, L, M); <span class="keyword">else</span> upcurpinfo(lc, L, M);</div><div class="line">			<span class="keyword">if</span>(M &lt; oR) <span class="built_in">set</span>(rc, M+<span class="number">1</span>, R); <span class="keyword">else</span> upcurpinfo(rc, M+<span class="number">1</span>, R);</div><div class="line">		&#125;</div><div class="line">		upcurpinfo(o, L, R);</div><div class="line">	&#125;</div><div class="line">	<span class="comment">/*</span></div><div class="line">	int uv, p;</div><div class="line">	void update(int o, int L, int R) &#123;</div><div class="line">		int lc = o*2, rc = o*2+1;</div><div class="line">		if(L == R) &#123;</div><div class="line">			setv[o] = -1; addv[o] = 0;</div><div class="line">			maxv[o] = minv[o] = sumv[o] = uv;</div><div class="line">			return;</div><div class="line">		&#125; else &#123;</div><div class="line">			int M = L + (R-L)/2;</div><div class="line">			if(M &gt;= p) update(lc, L, M);</div><div class="line">			else update(rc, M+1, R);</div><div class="line">		&#125;</div><div class="line">		upcurpinfo(o, L ,R);</div><div class="line">	&#125;</div><div class="line">	*/</div><div class="line">	<span class="keyword">int</span> soL, soR, smaxv;</div><div class="line">	<span class="comment">//setmax/min操作需全部统计再修改 </span></div><div class="line">	<span class="keyword">struct</span> sd &#123;</div><div class="line">		<span class="keyword">int</span> L, R, sv;</div><div class="line">	&#125;;</div><div class="line">	<span class="built_in">vector</span>&lt;sd&gt; svinfo;</div><div class="line">	<span class="function"><span class="keyword">void</span> <span class="title">setmax</span><span class="params">(<span class="keyword">int</span> o, <span class="keyword">int</span> L, <span class="keyword">int</span> R, <span class="keyword">int</span> _add=<span class="number">0</span>)</span> </span>&#123;</div><div class="line">		<span class="keyword">int</span> lc=o*<span class="number">2</span>, rc=o*<span class="number">2</span>+<span class="number">1</span>;</div><div class="line">		<span class="keyword">int</span> M = L + (R-L)/<span class="number">2</span>;</div><div class="line">		<span class="keyword">if</span>(setv[o] != INF) &#123;</div><div class="line">			<span class="keyword">if</span>(L&gt;=soL &amp;&amp; R&lt;=soR) &#123;</div><div class="line">				<span class="keyword">int</span> tmp = setv[o]+_add+addv[o];</div><div class="line">				<span class="keyword">if</span>(tmp &lt; smaxv) &#123;</div><div class="line">					<span class="comment">/*oL = L; oR = R; sv = smaxv;//-_add;//set操作已把所有add值pushdown</span></div><div class="line">					set(1, 1, n);*/</div><div class="line">					svinfo.push_back((sd)&#123;L, R, smaxv&#125;);</div><div class="line">				&#125;</div><div class="line">			&#125; <span class="keyword">else</span> &#123;</div><div class="line">				pushdown(o);</div><div class="line">				<span class="keyword">if</span>(M &gt;= soL) setmax(lc, L, M, _add+addv[o]); <span class="keyword">else</span> upcurpinfo(lc, L, M);</div><div class="line">				<span class="keyword">if</span>(M &lt; soR) setmax(rc, M+<span class="number">1</span>, R, _add+addv[o]); <span class="keyword">else</span> upcurpinfo(rc, M+<span class="number">1</span>, R);</div><div class="line">			&#125;</div><div class="line">			upcurpinfo(o, L, R);</div><div class="line">			<span class="keyword">return</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="comment">/*if(L == R) &#123;//边界一:已经到达叶节点 </span></div><div class="line">			if(smaxv &gt; maxv[o]) &#123;</div><div class="line">				p = L;</div><div class="line">				uv = smaxv;</div><div class="line">				update(1, 1, n);</div><div class="line">			&#125;	</div><div class="line">		&#125; else </div><div class="line">		*/</div><div class="line">		<span class="keyword">if</span>(L&gt;=soL &amp;&amp; R&lt;=soR) &#123;<span class="comment">//边界二三需满足:操作区间完全包含当前区间 </span></div><div class="line">			<span class="keyword">if</span>(smaxv &gt;= maxv[o]+_add) &#123;<span class="comment">//边界二:当前区间的最大值小于等于smaxv,可直接把当前整个区间设置为smaxv </span></div><div class="line">				<span class="comment">/*oL = L; oR = R; sv = smaxv;</span></div><div class="line">				set(1, 1, n);*/</div><div class="line">				svinfo.push_back((sd)&#123;L, R, smaxv&#125;);</div><div class="line">			&#125; <span class="keyword">else</span> <span class="keyword">if</span>(smaxv &lt;= minv[o]+_add) &#123;<span class="comment">//边界三:当前区间最小值大于等于smaxv,无需处理 </span></div><div class="line">				<span class="keyword">return</span>;</div><div class="line">			&#125; <span class="keyword">else</span> &#123;</div><div class="line">				<span class="keyword">if</span>(M &gt;= soL) setmax(lc, L, M, _add+addv[o]); <span class="keyword">else</span> upcurpinfo(lc, L, M);</div><div class="line">				<span class="keyword">if</span>(M &lt; soR) setmax(rc, M+<span class="number">1</span>, R, _add+addv[o]); <span class="keyword">else</span> upcurpinfo(rc, M+<span class="number">1</span>, R);</div><div class="line">			&#125;</div><div class="line">		&#125; <span class="keyword">else</span> &#123;</div><div class="line">			<span class="keyword">if</span>(M &gt;= soL) setmax(lc, L, M, _add+addv[o]); <span class="keyword">else</span> upcurpinfo(lc, L, M);</div><div class="line">			<span class="keyword">if</span>(M &lt; soR) setmax(rc, M+<span class="number">1</span>, R, _add+addv[o]); <span class="keyword">else</span> upcurpinfo(rc, M+<span class="number">1</span>, R);</div><div class="line">		&#125;</div><div class="line">		upcurpinfo(o, L, R);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">int</span> sminv;</div><div class="line">	<span class="function"><span class="keyword">void</span> <span class="title">setmin</span><span class="params">(<span class="keyword">int</span> o, <span class="keyword">int</span> L, <span class="keyword">int</span> R, <span class="keyword">int</span> _add=<span class="number">0</span>)</span> </span>&#123;</div><div class="line">		<span class="keyword">int</span> lc=o*<span class="number">2</span>, rc=o*<span class="number">2</span>+<span class="number">1</span>;</div><div class="line">		<span class="keyword">int</span> M = L + (R-L)/<span class="number">2</span>;</div><div class="line">		<span class="keyword">if</span>(setv[o] != INF) &#123;</div><div class="line">			<span class="keyword">if</span>(L&gt;=soL &amp;&amp; R&lt;=soR) &#123;</div><div class="line">				<span class="keyword">int</span> tmp = setv[o]+_add+addv[o];</div><div class="line">				<span class="keyword">if</span>(tmp &gt; sminv) &#123;</div><div class="line">					<span class="comment">/*oL = L; oR = R; sv = sminv;//-_add;//set操作已把所有add值pushdown</span></div><div class="line">					set(1, 1, n);*/</div><div class="line">					svinfo.push_back((sd)&#123;L, R, sminv&#125;);</div><div class="line">				&#125;</div><div class="line">			&#125; <span class="keyword">else</span> &#123;</div><div class="line"><span class="comment">//				printf("setmin(o=%d, L=%d, R=%d, _add=%d)-&gt;pushdown(o=%d, [L=%d, R=%d]), soL=%d, soR=%d\n", o, L, R, _add, o, L, R, soL, soR);</span></div><div class="line">				pushdown(o);</div><div class="line">				<span class="keyword">if</span>(M &gt;= soL) setmin(lc, L, M, _add+addv[o]); <span class="keyword">else</span> upcurpinfo(lc, L, M);</div><div class="line">				<span class="keyword">if</span>(M &lt; soR) setmin(rc, M+<span class="number">1</span>, R, _add+addv[o]); <span class="keyword">else</span> upcurpinfo(rc, M+<span class="number">1</span>, R);</div><div class="line">			&#125;</div><div class="line">			upcurpinfo(o, L, R);</div><div class="line">			<span class="keyword">return</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="comment">/*if(L == R) &#123;</span></div><div class="line">			if(sminv &lt; minv[o]) &#123;</div><div class="line">				p = L;</div><div class="line">				uv = sminv;</div><div class="line">				update(1, 1, n);</div><div class="line">			&#125;</div><div class="line">		&#125; else*/</div><div class="line">		<span class="keyword">if</span>(L&gt;=soL &amp;&amp; R&lt;=soR) &#123;</div><div class="line">			<span class="keyword">if</span>(sminv &lt;= minv[o]+_add) &#123;</div><div class="line">				<span class="comment">/*oL = L; oR = R; sv = sminv;</span></div><div class="line">				set(1, 1, n);*/</div><div class="line">				svinfo.push_back((sd)&#123;L, R, sminv&#125;);</div><div class="line">			&#125; <span class="keyword">else</span> <span class="keyword">if</span>(sminv &gt;= maxv[o]+_add) &#123;</div><div class="line">				<span class="keyword">return</span>;</div><div class="line">			&#125; <span class="keyword">else</span> &#123;</div><div class="line">				<span class="keyword">if</span>(M &gt;= soL) setmin(lc, L, M, _add+addv[o]); <span class="keyword">else</span> upcurpinfo(lc, L, M);</div><div class="line">				<span class="keyword">if</span>(M &lt; soR) setmin(rc, M+<span class="number">1</span>, R, _add+addv[o]); <span class="keyword">else</span> upcurpinfo(rc, M+<span class="number">1</span>, R);</div><div class="line">			&#125;</div><div class="line">		&#125; <span class="keyword">else</span> &#123;</div><div class="line">			<span class="keyword">if</span>(M &gt;= soL) setmin(lc, L, M, _add+addv[o]); <span class="keyword">else</span> upcurpinfo(lc, L, M);</div><div class="line">			<span class="keyword">if</span>(M &lt; soR) setmin(rc, M+<span class="number">1</span>, R, _add+addv[o]); <span class="keyword">else</span> upcurpinfo(rc, M+<span class="number">1</span>, R);</div><div class="line">		&#125;</div><div class="line">		upcurpinfo(o, L, R);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">int</span> _sum;</div><div class="line">	<span class="function"><span class="keyword">void</span> <span class="title">qsum</span><span class="params">(<span class="keyword">int</span> o, <span class="keyword">int</span> L, <span class="keyword">int</span> R, <span class="keyword">int</span> _add=<span class="number">0</span>)</span> </span>&#123;</div><div class="line">		<span class="keyword">if</span>(setv[o] != INF) &#123;</div><div class="line">			<span class="keyword">int</span> v = setv[o] + _add + addv[o];</div><div class="line">			_sum += v * (min(R, oR) - max(L, oL) + <span class="number">1</span>);</div><div class="line">		&#125; <span class="keyword">else</span> <span class="keyword">if</span>(L&gt;=oL &amp;&amp; R&lt;=oR) &#123;</div><div class="line">			_sum += sumv[o] + _add * (R-L+<span class="number">1</span>);</div><div class="line">		&#125; <span class="keyword">else</span> &#123;</div><div class="line">			<span class="keyword">int</span> lc = o*<span class="number">2</span>, rc = o*<span class="number">2</span>+<span class="number">1</span>;</div><div class="line">			<span class="keyword">int</span> M = L + (R-L)/<span class="number">2</span>;</div><div class="line">			<span class="keyword">if</span>(M &gt;= oL) qsum(lc, L, M, _add+addv[o]);</div><div class="line">			<span class="keyword">if</span>(M &lt; oR) qsum(rc, M+<span class="number">1</span>, R, _add+addv[o]);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">int</span> _max;</div><div class="line">	<span class="function"><span class="keyword">void</span> <span class="title">qmax</span><span class="params">(<span class="keyword">int</span> o, <span class="keyword">int</span> L, <span class="keyword">int</span> R, <span class="keyword">int</span> _add=<span class="number">0</span>)</span> </span>&#123;</div><div class="line">		<span class="keyword">if</span>(setv[o] != INF) &#123;</div><div class="line">			<span class="keyword">int</span> v = setv[o] + _add + addv[o];</div><div class="line">			_max = max(_max, v);</div><div class="line">		&#125; <span class="keyword">else</span> <span class="keyword">if</span>(L&gt;=oL &amp;&amp; R&lt;=oR) &#123;</div><div class="line">			_max = max(_max, maxv[o]+_add);</div><div class="line">		&#125; <span class="keyword">else</span> &#123;</div><div class="line">			<span class="keyword">int</span> lc=o*<span class="number">2</span>, rc=o*<span class="number">2</span>+<span class="number">1</span>;</div><div class="line">			<span class="keyword">int</span> M = L + (R-L)/<span class="number">2</span>;</div><div class="line">			<span class="keyword">if</span>(M &gt;= oL) qmax(lc, L, M, _add+addv[o]);</div><div class="line">			<span class="keyword">if</span>(M &lt; oR) qmax(rc, M+<span class="number">1</span>, R, _add+addv[o]);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">int</span> _min;</div><div class="line">	<span class="function"><span class="keyword">void</span> <span class="title">qmin</span><span class="params">(<span class="keyword">int</span> o, <span class="keyword">int</span> L, <span class="keyword">int</span> R, <span class="keyword">int</span> _add=<span class="number">0</span>)</span> </span>&#123;</div><div class="line">		<span class="keyword">if</span>(setv[o] != INF) &#123;</div><div class="line">			<span class="keyword">int</span> v = setv[o] + _add + addv[o];</div><div class="line">			_min = min(_min, v);</div><div class="line">		&#125; <span class="keyword">else</span> <span class="keyword">if</span>(L&gt;=oL &amp;&amp; R&lt;=oR) &#123;</div><div class="line">			_min = min(_min, minv[o]+_add);</div><div class="line">		&#125; <span class="keyword">else</span> &#123;</div><div class="line">			<span class="keyword">int</span> lc=o*<span class="number">2</span>, rc=o*<span class="number">2</span>+<span class="number">1</span>;</div><div class="line">			<span class="keyword">int</span> M = L + (R-L)/<span class="number">2</span>;</div><div class="line">			<span class="keyword">if</span>(M &gt;= oL) qmin(lc, L, M, _add+addv[o]);</div><div class="line">			<span class="keyword">if</span>(M &lt; oR) qmin(rc, M+<span class="number">1</span>, R, _add+addv[o]);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">int</span> _nmax, _nowmax;</div><div class="line">	<span class="function"><span class="keyword">void</span> <span class="title">qnmax</span><span class="params">(<span class="keyword">int</span> o, <span class="keyword">int</span> L, <span class="keyword">int</span> R, <span class="keyword">int</span> _add=<span class="number">0</span>)</span> </span>&#123;</div><div class="line">		<span class="keyword">if</span>(setv[o] != INF) &#123;</div><div class="line">			<span class="keyword">int</span> tmp = min(R, oR) - max(L, oL) + <span class="number">1</span>;</div><div class="line">			<span class="keyword">if</span>(_nowmax == setv[o]+_add+addv[o]) _nmax += tmp;</div><div class="line">			<span class="keyword">else</span> <span class="keyword">if</span>(_nowmax &lt; setv[o]+_add+addv[o]) &#123; _nowmax = setv[o]+_add+addv[o]; _nmax = tmp; &#125;</div><div class="line">		&#125; <span class="keyword">else</span> <span class="keyword">if</span>(L&gt;=oL &amp;&amp; R&lt;=oR) &#123;</div><div class="line">			<span class="keyword">if</span>(_nowmax == maxv[o]+_add) _nmax += nmax[o];</div><div class="line">			<span class="keyword">else</span> <span class="keyword">if</span>(_nowmax &lt; maxv[o]+_add) &#123; _nowmax = maxv[o]+_add; _nmax = nmax[o]; &#125;</div><div class="line">		&#125; <span class="keyword">else</span> &#123;</div><div class="line">			<span class="keyword">int</span> lc=o*<span class="number">2</span>, rc=o*<span class="number">2</span>+<span class="number">1</span>;</div><div class="line">			<span class="keyword">int</span> M = L + (R-L)/<span class="number">2</span>;</div><div class="line">			<span class="keyword">if</span>(M &gt;= oL) qnmax(lc, L, M, _add+addv[o]);</div><div class="line">			<span class="keyword">if</span>(M &lt; oR) qnmax(rc, M+<span class="number">1</span>, R, _add+addv[o]);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">int</span> _nmin, _nowmin;</div><div class="line">	<span class="function"><span class="keyword">void</span> <span class="title">qnmin</span><span class="params">(<span class="keyword">int</span> o, <span class="keyword">int</span> L, <span class="keyword">int</span> R, <span class="keyword">int</span> _add=<span class="number">0</span>)</span> </span>&#123;</div><div class="line">		<span class="keyword">if</span>(setv[o] != INF) &#123;</div><div class="line">			<span class="keyword">int</span> tmp = min(R, oR) - max(L, oL) + <span class="number">1</span>;</div><div class="line">			<span class="keyword">if</span>(_nowmin == setv[o]+_add+addv[o]) _nmin += tmp;</div><div class="line">			<span class="keyword">else</span> <span class="keyword">if</span>(_nowmin &gt; setv[o]+_add+addv[o]) &#123; _nowmin = setv[o]+_add+addv[o]; _nmin = tmp; &#125;</div><div class="line">		&#125; <span class="keyword">else</span> <span class="keyword">if</span>(L&gt;=oL &amp;&amp; R&lt;=oR) &#123;</div><div class="line">			<span class="keyword">if</span>(_nowmin == minv[o]+_add) _nmin += nmin[o];</div><div class="line">			<span class="keyword">else</span> <span class="keyword">if</span>(_nowmin &gt; minv[o]+_add) &#123; _nowmin = minv[o]+_add; _nmin = nmin[o]; &#125;</div><div class="line">		&#125; <span class="keyword">else</span> &#123;</div><div class="line">			<span class="keyword">int</span> lc=o*<span class="number">2</span>, rc=o*<span class="number">2</span>+<span class="number">1</span>;</div><div class="line">			<span class="keyword">int</span> M = L + (R-L)/<span class="number">2</span>;</div><div class="line">			<span class="keyword">if</span>(M &gt;= oL) qnmin(lc, L, M, _add+addv[o]);</div><div class="line">			<span class="keyword">if</span>(M &lt; oR) qnmin(rc, M+<span class="number">1</span>, R, _add+addv[o]);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="function"><span class="keyword">void</span> <span class="title">execute_command</span><span class="params">()</span> </span>&#123;</div><div class="line">		<span class="keyword">char</span> buf[<span class="number">20</span>];</div><div class="line"><span class="comment">//		printf("Reading(buf)...");</span></div><div class="line">		<span class="built_in">fscanf</span>(fin, <span class="string">"%s"</span>, buf);</div><div class="line"><span class="comment">//		printf(" buf=%s\n", buf);</span></div><div class="line">		<span class="keyword">int</span> op = <span class="number">0</span>;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">9</span>; i++) <span class="keyword">if</span>(<span class="built_in">strcmp</span>(cmds[i], buf) == <span class="number">0</span>) &#123; op = i; <span class="keyword">break</span>;&#125;</div><div class="line">		<span class="keyword">int</span> l, r, a;</div><div class="line">		<span class="keyword">switch</span>(op) &#123;</div><div class="line">			<span class="keyword">case</span> <span class="number">0</span>:</div><div class="line"><span class="comment">//				fscanf(fin, "%d%d%d", &amp;l, &amp;r, &amp;a);</span></div><div class="line">				l = Q_read(); r = Q_read(); a = Q_read();</div><div class="line">				</div><div class="line">				oL = l; oR = r; av = a;</div><div class="line"><span class="comment">//				fprintf(fout, "add(), oL=%d, oR=%d, av=%d\n", oL, oR, av);</span></div><div class="line">				add(<span class="number">1</span>, <span class="number">1</span>, n);<span class="comment">//从A[oL]到A[oR]每个红包钱数加a</span></div><div class="line">				<span class="keyword">break</span>;</div><div class="line">			<span class="keyword">case</span> <span class="number">1</span>:</div><div class="line"><span class="comment">//				fscanf(fin, "%d%d%d", &amp;l, &amp;r, &amp;a);</span></div><div class="line">				l = Q_read(); r = Q_read(); a = Q_read();</div><div class="line">				</div><div class="line">				oL = l; oR = r; sv = a;</div><div class="line"><span class="comment">//				fprintf(fout, "set, oL=%d, oR=%d\n", oL, oR);</span></div><div class="line">				<span class="built_in">set</span>(<span class="number">1</span>, <span class="number">1</span>, n);<span class="comment">//从A[oL]到A[oR]每个红包钱数变为a</span></div><div class="line">				<span class="keyword">break</span>;</div><div class="line">			<span class="keyword">case</span> <span class="number">2</span>:</div><div class="line"><span class="comment">//				fscanf(fin, "%d%d%d", &amp;l, &amp;r, &amp;a);</span></div><div class="line">				l = Q_read(); r = Q_read(); a = Q_read();</div><div class="line">				</div><div class="line">				soL = l; soR = r; smaxv = a;</div><div class="line">				svinfo.clear();</div><div class="line">				setmax(<span class="number">1</span>, <span class="number">1</span>, n);<span class="comment">//从A[oL]到A[oR]每个红包钱数变为max(A[i],a)</span></div><div class="line">				<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; svinfo.size(); i++) &#123;</div><div class="line">					sd &amp;x = svinfo[i];</div><div class="line">					oL = x.L; oR = x.R; sv = x.sv;</div><div class="line">					<span class="built_in">set</span>(<span class="number">1</span>, <span class="number">1</span>, n);</div><div class="line">				&#125;</div><div class="line">				<span class="keyword">break</span>;</div><div class="line">			<span class="keyword">case</span> <span class="number">3</span>:</div><div class="line"><span class="comment">//				fscanf(fin, "%d%d%d", &amp;l, &amp;r, &amp;a);</span></div><div class="line">				l = Q_read(); r = Q_read(); a = Q_read();</div><div class="line">				</div><div class="line">				soL = l; soR = r; sminv = a;</div><div class="line">				svinfo.clear();</div><div class="line">				setmin(<span class="number">1</span>, <span class="number">1</span>, n);<span class="comment">//从A[oL]到A[oR]每个红包钱数变为min(A[i],a)</span></div><div class="line">				<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; svinfo.size(); i++) &#123;</div><div class="line">					sd &amp;x = svinfo[i];</div><div class="line">					oL = x.L; oR = x.R; sv = x.sv;</div><div class="line">					<span class="built_in">set</span>(<span class="number">1</span>, <span class="number">1</span>, n);</div><div class="line">				&#125;</div><div class="line">				<span class="keyword">break</span>;</div><div class="line">			<span class="keyword">case</span> <span class="number">4</span>:</div><div class="line"><span class="comment">//				fscanf(fin, "%d%d", &amp;l, &amp;r);</span></div><div class="line">				l = Q_read(); r = Q_read();</div><div class="line">				</div><div class="line">				oL = l; oR = r;</div><div class="line"><span class="comment">//				fprintf(fout, "qsum(), oL=%d, oR=%d\n", oL, oR);</span></div><div class="line">				_sum = <span class="number">0</span>;</div><div class="line">				qsum(<span class="number">1</span>, <span class="number">1</span>, n);<span class="comment">//求从A[oL]到A[oR]每个红包钱数和</span></div><div class="line">				<span class="built_in">fprintf</span>(fout, <span class="string">"%d\n"</span>, _sum);</div><div class="line">				<span class="keyword">break</span>;</div><div class="line">			<span class="keyword">case</span> <span class="number">5</span>:</div><div class="line"><span class="comment">//				fscanf(fin, "%d%d", &amp;l, &amp;r);</span></div><div class="line">				l = Q_read(); r = Q_read();</div><div class="line">				</div><div class="line">				oL = l; oR = r;</div><div class="line">				_max = -INF;</div><div class="line">				qmax(<span class="number">1</span>, <span class="number">1</span>, n);<span class="comment">//从A[oL]到A[oR]每个红包钱数的最大值</span></div><div class="line">				<span class="built_in">fprintf</span>(fout, <span class="string">"%d\n"</span>, _max);</div><div class="line">				<span class="keyword">break</span>;</div><div class="line">			<span class="keyword">case</span> <span class="number">6</span>:</div><div class="line"><span class="comment">//				fscanf(fin, "%d%d", &amp;l, &amp;r);</span></div><div class="line">				l = Q_read(); r = Q_read();</div><div class="line">				</div><div class="line">				oL = l; oR = r;</div><div class="line">				_min = INF;</div><div class="line">				qmin(<span class="number">1</span>, <span class="number">1</span>, n);<span class="comment">//从A[oL]到A[oR]每个红包钱数的最小值</span></div><div class="line">				<span class="built_in">fprintf</span>(fout, <span class="string">"%d\n"</span>, _min);</div><div class="line">				<span class="keyword">break</span>;</div><div class="line">			<span class="keyword">case</span> <span class="number">7</span>:</div><div class="line"><span class="comment">//				fscanf(fin, "%d%d", &amp;l, &amp;r);</span></div><div class="line">				l = Q_read(); r = Q_read();</div><div class="line">				</div><div class="line">				oL = l; oR = r;</div><div class="line">				_nowmax = -INF; _nmax = <span class="number">0</span>;</div><div class="line">				qnmax(<span class="number">1</span>, <span class="number">1</span>, n);<span class="comment">//从A[oL]到A[oR]每个红包钱数的最大值的个数</span></div><div class="line">				<span class="built_in">fprintf</span>(fout, <span class="string">"%d\n"</span>, _nmax);</div><div class="line">				<span class="keyword">break</span>;</div><div class="line">			<span class="keyword">case</span> <span class="number">8</span>:</div><div class="line"><span class="comment">//				fscanf(fin, "%d%d", &amp;l, &amp;r);</span></div><div class="line">				l = Q_read(); r = Q_read();</div><div class="line">				</div><div class="line">				oL = l; oR = r;</div><div class="line">				_nowmin = INF; _nmin = <span class="number">0</span>;</div><div class="line">				qnmin(<span class="number">1</span>, <span class="number">1</span>, n);<span class="comment">//从A[oL]到A[oR]每个红包钱数的最小值的个数</span></div><div class="line">				<span class="built_in">fprintf</span>(fout, <span class="string">"%d\n"</span>, _nmin);</div><div class="line">				<span class="keyword">break</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="comment">/*</span></div><div class="line">		printf("op=%s, l=%d, r=%d, a=%d\n", buf, l, r, a);</div><div class="line">		for(int i = 1; i &lt;= n; i++) &#123;</div><div class="line">			_sum = 0;</div><div class="line">			oL = oR = i;</div><div class="line">			qsum(1, 1, n);</div><div class="line">			printf("%d ", _sum);</div><div class="line">		&#125;</div><div class="line">		printf("\n");</div><div class="line">		*/</div><div class="line">	&#125;</div><div class="line">&#125;;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</div><div class="line">	fin = fopen(<span class="string">"redbag.in"</span>, <span class="string">"r"</span>);</div><div class="line">	fout = fopen(<span class="string">"redbag.out"</span>, <span class="string">"w"</span>);</div><div class="line"><span class="comment">//	fout = stdout;</span></div><div class="line"><span class="comment">//	printf("Reading(n)..."); </span></div><div class="line"></div><div class="line"><span class="comment">//	fscanf(fin, "%d", &amp;n);</span></div><div class="line">	n = Q_read();</div><div class="line">	</div><div class="line"><span class="comment">//	printf(" n=%d\n", n); </span></div><div class="line"><span class="comment">//	printf("Reading(A[])..."); </span></div><div class="line"></div><div class="line"><span class="comment">//	for(int i = 1; i &lt;= n; i++) fscanf(fin, "%d", &amp;A[i]);</span></div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) A[i] = Q_read();</div><div class="line">	</div><div class="line"><span class="comment">//	printf("A: ");</span></div><div class="line"><span class="comment">//	for(int i = 1; i &lt;= n; i++) printf("%d ", A[i]);</span></div><div class="line"><span class="comment">//	printf("\n");</span></div><div class="line">	SEG *D = <span class="keyword">new</span> SEG(n);</div><div class="line">	</div><div class="line"><span class="comment">//	fscanf(fin, "%d", &amp;m);</span></div><div class="line">	m = Q_read();</div><div class="line">	</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++) D-&gt;execute_command();</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
      
        
        <tags>
            
            <tag> OI </tag>
            
        </tags>
        
    </entry>
    
  
  
    
    <entry>
      <title><![CDATA[关于]]></title>
      <url>https://blog.ltmcpe.cn/about/index.html</url>
      <content type="html"><![CDATA[<h1 id="关于我"><a href="#关于我" class="headerlink" title="关于我"></a>关于我</h1><p>我现在是一个退役的OIer<br>这是我的垃圾小站(完全由Hexo生成)<br>我是一个弱渣  </p>
<p>下面来<em>%</em>以下<em>dalao</em>(排名不分先后)<br><a href="http://blog.csdn.net/c_lyr" target="_blank" rel="external">cl</a>, <a href="http://blog.csdn.net/coolkid_cwm" target="_blank" rel="external">Coolkid</a>, <a href="http://cybeird.tk" target="_blank" rel="external">cybeird</a>, <a href="http://blog.csdn.net/janis_z" target="_blank" rel="external">Janis</a>, <a href="http://muzhou.tech" target="_blank" rel="external">MuZhou</a>, <a href="http://soyjuice.tk" target="_blank" rel="external">soyjuice</a>, <a href="http://blog.csdn.net/qq_34004420" target="_blank" rel="external">zzx</a>  </p>
]]></content>
    </entry>
    
  
</search>
